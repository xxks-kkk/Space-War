<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
    Test SQLLite by creating a table called Users, adding some records to it and retreiving them.
*/
var q;
show_debug_message("Initialize: " + string(GMSQL_Init()));
var db = GMSQL_Open_Database_SQLITE("test.sqlite");
show_debug_message("Open SQLLite test.sqlite: " + string(db));
show_debug_message("Creating new table...");
q = GMSQL_QueryExecute(db, "CREATE TABLE Users (id INTEGER, name TEXT, password TEXT, age REAL)");
show_debug_message("Create Table Users Result: " + string(q));
show_debug_message("Adding Rows to table Users...");
for (i=0; i&lt;20; i++) {
    q = GMSQL_QueryExecute(db, "INSERT INTO Users VALUES (" + string(i) + ",'User', 'Pass', 1123);");
    if (q==-1) {
        show_debug_message("Query Failed!");
        show_debug_message(GMSQL_GetLastError());
        break;
    }
}
show_debug_message("Selecting rows from Users...");
q = GMSQL_Query(db, "SELECT id, name, password, age FROM Users");
while (GMSQL_QueryResult_Next(q)) {
show_debug_message("Query Field0: " + string(GMSQL_QueryResult_GetNamedFieldReal(q,"id"))); //Get field by name
show_debug_message("Query Field1: " + string(GMSQL_QueryResult_GetFieldString(q,1))); //Get field by index
show_debug_message("Query Field2: " + string(GMSQL_QueryResult_GetFieldString(q,2))); //Get field by index
show_debug_message("Query Field3: " + string(GMSQL_QueryResult_GetFieldReal(q,3))); //Get field by index
}
GMSQL_QueryResult_Finish(q); //Clean up the query result

//Close the database.
show_debug_message("Close database: " + string(GMSQL_Close_Database(db)));


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
